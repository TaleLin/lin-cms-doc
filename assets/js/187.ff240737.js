(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{567:function(t,s,e){"use strict";e.r(s);var v=e(26),a=Object(v.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"后端起步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后端起步"}},[t._v("#")]),t._v(" "),e("H2Icon"),t._v(" 后端起步")],1),t._v(" "),e("h2",{attrs:{id:"你需要了解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#你需要了解"}},[t._v("#")]),t._v(" 你需要了解")]),t._v(" "),e("p",[t._v("入门一个新框架最好的方式就是将这个框架的 demo 运行起来。由于 Lin 采用的是前后端分离的架构，所以相比于传统的网站，它的环境搭建会稍显麻烦。但 Lin 并没有采用任何冷门的技术，相比于传统网站，只不过多出了一些对于 Vue 运行环境的支持。")]),t._v(" "),e("p",[t._v("Lin 的 Server 端是基于 Python Flask 的, 所以你必须首先在自己的 PC 上安装 Python 环境包。此外，Lin 是一个完整的框架，数据库是必然需要的。")]),t._v(" "),e("p",[t._v("无需担心，我们将详细阐述安装的步骤，让你轻松将 Lin 运行起来。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("对于初学者，我们建议首先安装 Server 的环境，在将 Server 端运行、调试通过后再进行 Client 的安装和配置。")])]),t._v(" "),e("h2",{attrs:{id:"快速开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" 快速开始")]),t._v(" "),e("h3",{attrs:{id:"server-端必备环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#server-端必备环境"}},[t._v("#")]),t._v(" Server 端必备环境")]),t._v(" "),e("ul",[e("li",[t._v("安装"),e("code",[t._v("Python")]),t._v("环境(version： 3.8+)")])]),t._v(" "),e("h3",{attrs:{id:"获取工程项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取工程项目"}},[t._v("#")]),t._v(" 获取工程项目")]),t._v(" "),e("p",[t._v("打开您的命令行工具（terminal），在其中键入:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/TaleLin/lin-cms-flask.git starter\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Tips:")])]),t._v(" "),e("p",[t._v("我们以 "),e("code",[t._v("starter")]),t._v(" 作为工程名，当然您也可以以任意您喜爱的名字作为工程名。")]),t._v(" "),e("p",[t._v("如果您想以某个版本，如"),e("code",[t._v("0.0.1")]),t._v("版，作为起始项目，那么请在 github 上的版本页下载相应的版本即可。")])]),t._v(" "),e("h3",{attrs:{id:"安装依赖包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖包"}},[t._v("#")]),t._v(" 安装依赖包")]),t._v(" "),e("p",[t._v("进入项目目录，调用环境中的 pip 来安装依赖包:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("pip "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -r requirements-dev.txt\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("Tips:")])]),t._v(" "),e("p",[e("code",[t._v("requirements-dev.txt")]),t._v(" 是开发环境的依赖文件;"),e("code",[t._v("requirements-prod.txt")]),t._v(" 是部署生产使用的依赖文件。")])]),t._v(" "),e("h3",{attrs:{id:"数据库配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库配置"}},[t._v("#")]),t._v(" 数据库配置")]),t._v(" "),e("p",[t._v("为了方便快速上手，Lin 默认使用无需额外部署的 "),e("code",[t._v("Sqlite3")]),t._v(" 数据库。")]),t._v(" "),e("p",[t._v("打开项目根目录下的.env 文件(我们提供了开发环境的"),e("code",[t._v(".development.env")]),t._v("和生产环境的"),e("code",[t._v(".production.env")]),t._v(")，配置其"),e("code",[t._v("SQLALCHEMY_DATABASE_URI")])]),t._v(" "),e("blockquote",[e("p",[t._v("Tips: 后文我们用{env}指代配置 development/production 环境")])]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 数据库配置示例\n    SQLALCHEMY_DATABASE_URI='sqlite:///relative/path/to/file.db'\n\n    or\n\n    SQLALCHEMY_DATABASE_URI='sqlite:////absolute/path/to/file.db'\n")])])]),e("p",[t._v("这将在项目的最外层目录生成名为"),e("code",[t._v("lincms${env}.db")]),t._v("的 Sqlite3 数据库文件。")]),t._v(" "),e("h4",{attrs:{id:"使用-mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-mysql"}},[t._v("#")]),t._v(" 使用 MySQL")]),t._v(" "),e("p",[e("strong",[t._v("Tips:")]),t._v(" 默认的依赖中不包含 Python 的 Mysql 库，如有需要，请自行在您的运行环境中安装它（如"),e("code",[t._v("pymysql")]),t._v("或"),e("code",[t._v("cymysql")]),t._v("等）。")]),t._v(" "),e("p",[t._v("Lin 需要您自己在 MySQL 中新建一个数据库，名字由您自己决定(例如"),e("code",[t._v("lincms")]),t._v(")。")]),t._v(" "),e("p",[t._v("创建数据库后，打开项目根目录下的"),e("code",[t._v(".${env}.env")]),t._v("文件，配置对应的"),e("code",[t._v("SQLALCHEMY_DATABASE_URI")]),t._v("。")]),t._v(" "),e("p",[t._v("如下所示：")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 数据库配置示例: '数据库+驱动库://用户名:密码@主机:端口/数据库名'\nSQLALCHEMY_DATABASE_URI = 'mysql+pymysql://root:123456@localhost:3306/lincms'\n")])])]),e("blockquote",[e("p",[t._v("您所使用的数据库账号必须具有创建数据表的权限，否则 Lin 将无法为您自动创建数据表")])]),t._v(" "),e("h3",{attrs:{id:"初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),e("p",[t._v("如果您是第一次使用 "),e("strong",[e("code",[t._v("Lin-CMS")])]),t._v("，需要初始化数据库。")]),t._v(" "),e("p",[t._v("请先进入项目根目录，然后执行"),e("code",[t._v("flask db init")]),t._v(",用来添加超级管理员 root(默认密码 123456), 以及新建其他必要的分组")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Tips:")]),t._v("\n如果您需要一些业务样例数据，可以执行脚本"),e("code",[t._v("flask db fake")]),t._v("添加它")])]),t._v(" "),e("h3",{attrs:{id:"运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[t._v("#")]),t._v(" 运行")]),t._v(" "),e("p",[t._v("一切就绪后，再次从命令行中执行")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("flask run\n")])])]),e("p",[t._v("如果一切顺利，您将在命令行中看到项目成功运行的信息。如果您没有修改代码，Lin 将默认在本地启动一个端口号为 5000 的端口用来监听请求。此时，我们访问"),e("code",[t._v("http://localhost:5000")]),t._v("，将看到一组字符：")]),t._v(" "),e("p",[t._v('“心上无垢，林间有风"')]),t._v(" "),e("p",[t._v("点击“心上无垢”，将跳转到"),e("code",[t._v("Redoc")]),t._v("页面；点击“林间有风”，跳转到"),e("code",[t._v("Swagger")]),t._v("页面。")]),t._v(" "),e("p",[t._v("这证明您已经成功的将服务运行起来了，Congratulations！")]),t._v(" "),e("p",[t._v("如果你安装时遇到问题，那么尝试看看"),e("RouterLink",{attrs:{to:"/server/flask/questions.html"}},[t._v("常见问题汇总")]),t._v("，看能否解决，或者去我们的 github 仓库看 issue。如果没有出现你的问题，请给我们提 issue。")],1),t._v(" "),e("RightMenu")],1)}),[],!1,null,null,null);s.default=a.exports}}]);