(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{527:function(t,e,a){"use strict";a.r(e);var s=a(26),_=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"模型管理和权限管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型管理和权限管理"}},[t._v("#")]),t._v(" "),a("H2Icon"),t._v(" 模型管理和权限管理")],1),t._v(" "),a("blockquote",[a("p",[t._v("阅读本小节前，请确保你一定完成了"),a("RouterLink",{attrs:{to:"/start/flask/"}},[t._v("快速开始")]),t._v("的全部内容\n本小结使用"),a("code",[t._v("postman")]),t._v("作为 http 测试工具，请确保你有 postman 或类似的 http 测试工具，它是我们后续开发必不可少的工具。")],1)]),t._v(" "),a("h3",{attrs:{id:"架构介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构介绍"}},[t._v("#")]),t._v(" 架构介绍")]),t._v(" "),a("p",[t._v("Lin 的定位是一整套的 Flask CMS 解决方案。对于任何的 CMS 来说，权限这一块都是"),a("strong",[t._v("不可或缺")]),t._v("的，因此 Lin 在基础框架中便已经集成了权限模块，它是开箱即用的。")]),t._v(" "),a("p",[t._v("不过 Lin 的权限模块的概念可能与其它的权限框架由些许不同，当然你完全不用担心，因为大部分权限系统的模式都大同小异。")]),t._v(" "),a("p",[t._v("在 Lin 的权限模块中，我们有三个模型类来组成这个这个权限模块。如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用户模型（user_model，数据表名称为 lin_user）\n用户是权限系统服务的基本单位，CMS 与一些网站的很大的区别在于，CMS 可能不存在不用登陆便可进入的页面（登陆页除外）。")]),t._v(" "),a("p",[t._v("简而言之，用户是必须的。")])]),t._v(" "),a("li",[a("p",[t._v("分组模型（group_model，数据表名称为 lin_group）\n分组是一个非常重要的概念，分组是权限分配的基本单位，同时它也是容纳用户的容器，它是用户与权限之间的纽带。")]),t._v(" "),a("p",[t._v("一个用户可以属于多个分组，一个分组可以拥有多个用户。超级管理员（root）属于任何超级管理员组，但超级管理员组拥有所有的权限。")]),t._v(" "),a("p",[t._v("分组也可拥有多个权限，也就是说，在某个分组的用户拥有该分组的所有权限。")])]),t._v(" "),a("li",[a("p",[t._v("权限模型（permission_model，数据表名称为 lin_permission）\n你可以把一个权限理解成一把钥匙，然你拥有这把钥匙的时候你就可以打开某扇门，而当你没有这把钥匙的时候，你就会被锁在门的外面。")]),t._v(" "),a("p",[t._v("所以对于某个用户，比如说：你，当你拥有某个权限时，你就可以访问某个 API（或多个 API），而当你没有这个权限时，你访问 API 时会得到一个授权失败或禁止的信息。")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("在依赖的核心库"),a("code",[t._v("lin-cms")]),t._v("可以找到这些数据模型类。"),a("code",[t._v("lin.interface")]),t._v("下定义了它们接口，"),a("code",[t._v("lin.model")]),t._v("中实现了它们权限相关逻辑，最后在 create_app 时传入"),a("code",[t._v("app.model.lin")]),t._v("下对应继承的类。")]),t._v(" "),a("p",[t._v("根据需要，你也可以对"),a("code",[t._v("app.model.lin")]),t._v("下的模型进行增改。")])]),t._v(" "),a("h3",{attrs:{id:"基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[t._v("#")]),t._v(" 基本使用")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("app/v1/book.py")]),t._v("中修改删除图书功能的 API。")]),t._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@book_api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/<int:id>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" methods"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DELETE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将这个视图函数注册到权限管理容器中；permission的名称为 `删除图书` 模块名为 `图书`")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@permission_meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("auth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"删除图书"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"图书"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有在分组授权后才可访问")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@group_required")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete_book")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("请注意,这一行代码，也就是说，权限的命名和分配均是由开发者自己来斟酌，如果你们是团队协作，请与你们的前端、客户仔细交流再做决定。")])]),t._v(" "),a("p",[t._v("然后在前端为分组分配权限，再将用户划入此有权限的分组，即可登录此用户删除图书了。")]),t._v(" "),a("p",[t._v("::: TODO")]),t._v(" "),a("p",[t._v("补充后端演示脚本")]),t._v(" "),a("p",[t._v(":::")]),t._v(" "),a("h3",{attrs:{id:"守卫函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#守卫函数"}},[t._v("#")]),t._v(" 守卫函数")]),t._v(" "),a("p",[t._v("在上一节中，聪明的你一定注意到了一个"),a("code",[t._v("@group_required")]),t._v("的装饰器。我们把这它称之为"),a("strong",[t._v("守卫函数")]),t._v("。请记住，守卫函数是权限系统中非常重要的一环，在基础库中我们提供了 3 个守卫函数，分别是：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("name")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("login_required")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被 login_required 装饰的视图函数需登陆后才可访问")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("**")])])]),t._v(" "),a("tr",[a("td",[t._v("group_required")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被 group_required 装饰的视图函数需登陆且被授予相应的权限后才可访问")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("**")])])]),t._v(" "),a("tr",[a("td",[t._v("admin_required")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("被 admin_required 装饰的视图函数只有超级管理员才可访问")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("**")])])])])]),t._v(" "),a("p",[t._v("请注意，这三个守卫函数是开发层面上权限管理。如果你的视图函数未加任何守卫函数修饰，那么它可以被任何人访问，这样的视图函数一般是登陆这些功能的视图函数。又如哪些视图函数需要用户登陆才能访问，如用户修改密码，那么它可以加上"),a("code",[t._v("login_required")]),t._v("这个守卫函数。如果有些视图函数的功能需要授予权限才能访问，请使用"),a("code",[t._v("group_required")]),t._v("。而有些视图函数非超级管理员不可操作，那么请加上"),a("code",[t._v("admin_required")]),t._v("修饰。")]),t._v(" "),a("h3",{attrs:{id:"扩展模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展模型"}},[t._v("#")]),t._v(" 扩展模型")]),t._v(" "),a("p",[t._v("刚刚我们谈到扩展模型，事实上扩展 group_model 非常简单。")]),t._v(" "),a("p",[t._v("首先我们在"),a("code",[t._v("app/api/cms/model/")]),t._v("下打开"),a("code",[t._v("group.py")]),t._v("文件, 然后在"),a("code",[t._v("Group")]),t._v("类上追加你想要的字段即可。")]),t._v(" "),a("p",[t._v("由于 flask-sqlalchemy 的特性，当数据库中有 lin_user 这张表时，它并不会直接更新这张表。所以为了确保扩展成功，请你在数据库中先删除掉 lin-user 这张表，然后再次运行"),a("code",[t._v("flask run")]),t._v(" (或者"),a("code",[t._v("flask db init --force")]),t._v("强制初始化数据库中所有表)。")]),t._v(" "),a("h2",{attrs:{id:"infocrud-和-basecrud"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#infocrud-和-basecrud"}},[t._v("#")]),t._v(" InfoCrud 和 BaseCrud")]),t._v(" "),a("p",[t._v("Lin 默认集成了 flask-sqlalchemy 这个方便的 ORM 库，因此我们可以很好的根据模型（model）来进行相关的数据库操作。某种意义上，sqlalchemy 提供的 API 已经可以很好的操作数据库了。")]),t._v(" "),a("p",[t._v("林间有风团队在诸多项目的开发中，也同时积累了些许经验，我们希望当模型类被定义时便已经默认拥有了简单的 CRUD，因此在 Lin 中我们提供了这两个方便的基础模型类—— InfoCrud 和 BaseCrud。")]),t._v(" "),a("p",[t._v("BaseCrud 默认便拥有"),a("code",[t._v("create")]),t._v("，"),a("code",[t._v("delete")]),t._v("，"),a("code",[t._v("update")]),t._v("，"),a("code",[t._v("get")]),t._v("这些便捷方法，你可以很便捷的进行数据的增删查改。")]),t._v(" "),a("p",[t._v("InfoCrud 在 BaseCrud 的基础上，添加了"),a("code",[t._v("create_time")]),t._v("，"),a("code",[t._v("update_time")]),t._v("，"),a("code",[t._v("delete_time")]),t._v("这三个字段，方便你进行数据的分析和观察，另外 InfoCrud 还增加了"),a("code",[t._v("hard_delete")]),t._v("方法，InfoCrud 使用"),a("code",[t._v("delete_time")]),t._v("来进行数据的软删除，因此当你调用"),a("code",[t._v("delete")]),t._v("方法时，数据并不会真正的从数据库中删除，而是写入"),a("code",[t._v("delete_time")]),t._v("，所以若要真正的删除数据，需调用"),a("code",[t._v("hard_delete")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("如果你对模型类的操作还不够了解，甚至有些疑惑，请你详细阅读"),a("a",{attrs:{href:"http://flask-sqlalchemy.pocoo.org/2.3/queries/#querying-records",target:"_blank",rel:"noopener noreferrer"}},[t._v("flask-sqlalchemy"),a("OutboundLink")],1),t._v("的官方文档，")]),t._v(" "),a("p",[t._v("和这个"),a("a",{attrs:{href:"https://www.jianshu.com/p/8d085e2f2657",target:"_blank",rel:"noopener noreferrer"}},[t._v("sqlalchemy 小教程"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("RightMenu")],1)}),[],!1,null,null,null);e.default=_.exports}}]);