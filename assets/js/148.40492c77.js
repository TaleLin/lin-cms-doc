(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{529:function(t,n,a){"use strict";a.r(n);var _=a(26),s=Object(_.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" "),a("H2Icon"),t._v(" 配置")],1),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("我们曾不止一次的提到，Lin 是一个基于 Flask 的框架，你可以把 Lin 理解成一个 Flask 的上层框架。这个概念"),a("strong",[t._v("很重要")]),t._v("，意味着你可以在 Lin 中去使用 Flask 的一切特性，它支持三种配置方式:")]),t._v(" "),a("ol",[a("li",[t._v("环境变量的方式\n通过加载记录环境变量的文件，如"),a("code",[t._v(".flaskenv")]),t._v(","),a("code",[t._v(".development.env")]),t._v("文件，来导入环境变量配置。")]),t._v(" "),a("li",[t._v("配置文件的方式\n通过加载专门的配置文件，如"),a("code",[t._v("app/config/development.py")]),t._v("文件，来导入配置。")]),t._v(" "),a("li",[t._v("硬编码的方式。\n你可以直接在代码中通过值的方式来进行配置。")])]),t._v(" "),a("p",[t._v("当然，优先级也是依次递增的。")]),t._v(" "),a("h2",{attrs:{id:"lin-cms-flask-配置加载顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lin-cms-flask-配置加载顺序"}},[t._v("#")]),t._v(" Lin-CMS-Flask 配置加载顺序")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("从 .flaskenv 中读取 Flask 本身的环境变量。")]),t._v(" "),a("ul",[a("li",[t._v("FLASK_ENV：启动环境，development, testing and production. "),a("strong",[t._v("决定加载配置的入口")])]),t._v(" "),a("li",[t._v("FLASK_RUN_HOST: 启动监听 IP 地址")]),t._v(" "),a("li",[t._v("FLASK_RUN_PORT: 启动监听端口")]),t._v(" "),a("li",[t._v("FLASK_APP: 启动入口，flask 核心对象")])])]),t._v(" "),a("li",[a("p",[t._v("根据"),a("code",[t._v("FLASK_ENV")]),t._v("的启动环境，读取此环境对应的项目配置 env。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Tips:")])]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("FLASK_ENV")]),t._v("指定以"),a("code",[t._v("development")]),t._v("环境启动，则读取"),a("code",[t._v(".development.env")])]),t._v(" "),a("p",[t._v("一般包含私密配置，建议不要将此文件上传的公开仓库。")])]),t._v(" "),a("ul",[a("li",[t._v("SQLALCHEMY_DATABASE_URI: 数据库链接")]),t._v(" "),a("li",[t._v("SECRET_KEY: FLASK 密钥")])])])]),t._v(" "),a("p",[t._v("3.根据"),a("code",[t._v("FLASK_ENV")]),t._v("的启动环境，读取此环境对应的项目配置 py。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Tips:")])]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("FLASK_ENV")]),t._v("指定以"),a("code",[t._v("development")]),t._v("环境启动，则读取"),a("code",[t._v("app/config/development.py")])]),t._v(" "),a("p",[t._v("由于 Flask 对配置项的限制，你必须保证命名全都大写")])]),t._v(" "),a("p",[t._v("默认情况下在此 python 配置文件中继承了我们提供的初始配置，你也可以根据需要覆盖其配置，如:")]),t._v(" "),a("div",{staticClass:"language-pytyhon extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    # 指定加密KEY\n    SECRET_KEY = os.getenv("SECRET_KEY", "https://github.com/TaleLin/lin-cms-flask")\n\n    # 指定数据库\n    SQLALCHEMY_DATABASE_URI = os.getenv(\n        "SQLALCHEMY_DATABASE_URI",\n        "sqlite:////" + os.getcwd() + os.path.sep + "lincms.db",\n    )\n\n    # 指定访问api服务的url, 用于本地文件上传\n    SITE_DOMAIN="https://lincms.example.com"\n\n    # 令牌有效期配置\n    JWT_ACCESS_TOKEN_EXPIRES = timedelta(hours=1)\n    # 默认文件上传配置\n    FILE = {\n        "STORE_DIR": "app/assets",\n        "SINGLE_LIMIT": 1024 * 1024 * 2,\n        "TOTAL_LIMIT": 1024 * 1024 * 20,\n        "NUMS": 10,\n        "INCLUDE": set(["jpg", "png", "jpeg"]),\n        "EXCLUDE": set([]),\n    }\n\n    # 运行日志\n    LOG = {\n        "LEVEL": "DEBUG",\n        "DIR": "logs",\n        "SIZE_LIMIT": 1024 * 1024 * 5,\n        "REQUEST_LOG": True,\n        "FILE": True,\n    }\n')])])]),a("h2",{attrs:{id:"自定义配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义配置文件"}},[t._v("#")]),t._v(" 自定义配置文件")]),t._v(" "),a("p",[t._v("你也可以完全按照需要自己定义全套配置文件：")]),t._v(" "),a("ol",[a("li",[t._v("从"),a("code",[t._v(".flaskenv")]),t._v("开始，指定 flask "),a("code",[t._v("FLASK_ENV")]),t._v("为"),a("code",[t._v("myenv")]),t._v("。")]),t._v(" "),a("li",[t._v("创建"),a("code",[t._v(".myenv.env")]),t._v(", "),a("code",[t._v("app/config/myenv.py")]),t._v("。")]),t._v(" "),a("li",[t._v("对照样例代码补充自己的配置逻辑。")])]),t._v(" "),a("h2",{attrs:{id:"（optional）无关上下文和核心对象的全局配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#（optional）无关上下文和核心对象的全局配置"}},[t._v("#")]),t._v(" （Optional）无关上下文和核心对象的全局配置")]),t._v(" "),a("p",[t._v("初始化核心对象调用"),a("code",[t._v("create_app")]),t._v("传参时， 以 "),a("code",[t._v("config_")]),t._v("开头的关键字参数，传入的对象会被挂载到"),a("code",[t._v("lin.config.global_config")]),t._v("字典下，作为可被全局调用的配置。\n例如:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    config_MESSAGE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("MSG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("可以通过以下方式获取：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" lin "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" global_config\nmessage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" global_config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MESSAGE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);